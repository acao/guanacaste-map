{"version":3,"sources":["src/components/legend.js","src/config.js","src/utils.js","src/handlers.js","src/components/popup.js","src/map.js","src/index.js"],"names":["allLayers","map","layer","name","type","layerId","color","label","join","MAP","ACCESS_TOKEN","module","exports","getVisibleLayers","layerList","filter","id","substring","reduce","agg","result","Object","SOURCE_TYPES","assign","getFilteredLayers","layerName","LAYERS","getFilterHandler","layerOrSymbolType","document","getElementById","classList","toggle","visibleLayers","activeSymbolLayers","keys","key","length","setLayoutProperty","setFilter","isToggledOn","getNoFilterHandler","filteredLayers","legendItemEls","querySelectorAll","forEach","call","add","feature","properties","link","Estación","Image","description","createCompass","getMap","mapboxgl","accessToken","DEFAULT_MAP","leftEl","querySelector","compass","createElement","innerHTML","onclick","flyTo","center","appendChild","Map","popup","Popup","on","LAYER_ID","e","features","geometry","coordinates","ANIMATION_DURATION","setLngLat","setHTML","addTo","addControl","FullscreenControl","nav","NavigationControl","showCompass","scrollZoom","disable","window","tcat","toggleLegend","getStyle","layers","handleFilter","noFilter","body","addEventListener","event","metaKey","ctrlKey","enable"],"mappings":"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","file":"src.49edf35d.map","sourceRoot":"..","sourcesContent":["export default allLayers =>\n  `<div class=\"legend-wrapper\">\n    <h4 class=\"overlay-box toggle-button\" onClick=\"tcat.toggleLegend()\">\n        Puestos Estaciónes y Tourismos\n        <span id=\"legend-toggle-icon\"></span>\n    </h4>\n    <div class=\"flex-child legend-inner\">\n\t\t\t<div id=\"legend-items\" class=\"overlay-box toggle-content\">\n          ${allLayers\n            .map(\n              layer => `<div class=\"legend-item active\" id=\"${\n                layer.name\n              }\" onClick=\"tcat.handleFilter('${layer.name}', '${layer.type || 'symbol'}', ${\n                layer.layerId ? `'${layer.layerId}'` : null\n              })\">\n                  <span class=\"legend-key\" style=\"background-color: ${layer.color}\"></span>\n                  <span class=\"label\">${layer.label}</span>\n                </div>`\n            )\n            .join('')}\n\n\t\t\t</div>\n      <div id=\"legend-footer\" class=\"overlay-box toggle-content\">\n        <div onClick=\"tcat.noFilter()\">Ver Todo</div>\n      </div>\n\t</div>\n</div>`;\n","const MAP = {\n  // for creating mapboxgl.Map(). container defaults to 'map'\n  style: 'mapbox://styles/guanacaste/cjj079axn0aqu2so55fx6ln2x',\n  center: [-85.61365526723557, 10.838261234356153],\n  zoom: 9.619976883678385,\n  scrollZoom: false\n  //\"sprite\": \"mapbox://sprites/mapbox/bright-v8\"\n};\n\nconst ACCESS_TOKEN =\n  'pk.eyJ1IjoiZ3VhbmFjYXN0ZSIsImEiOiJjamowNzhuYnAwZXU2M2txczhsc21mbDVsIn0.amJMu3O1jfjcbg-B1qC7ww';\n\nmodule.exports = {\n  LAYER_ID: 'toggle-turismo',\n  SYMBOL_LAYERS: ['toggle-turismo', 'toggle-ecosistemas'],\n  //FLY_TO_ZOOM_LEVEL: 9.619976883678385,\n  ANIMATION_DURATION: 2000,\n  LEGEND_TITLE: 'Puestos Estaciónes y Tourismos',\n  ACCESS_TOKEN,\n  MAP,\n  SOURCE_TYPES: [\n    {\n      name: 'biological',\n      layerId: 'toggle-turismo',\n      label: 'Biological'\n    },\n    {\n      layerId: 'toggle-turismo',\n      name: 'tourist',\n      label: 'Touristo'\n    }\n  ],\n  LAYERS: {\n    'toggle-turismo': { label: 'Turismo', color: '#CCCC00' },\n    'toggle-unesco': { label: 'UNESCO', color: '#CCCC00' },\n    'toggle-sectores': { label: 'Sectores', color: '#449438' },\n    'toggle-ecosistemas': { label: 'Ecosistemas', color: '#000000' }\n  }\n};\n","import { SOURCE_TYPES, LAYERS } from './config';\n\nexport const getVisibleLayers = layerList =>\n  layerList.filter(({ id }) => id.substring(0, 7) === 'toggle-').reduce((agg, layer) => {\n    let result = { [layer.id]: true };\n    if (layer.id === 'toggle-turismo') {\n      result[layer.id] = SOURCE_TYPES.filter(({ layerId }) => layerId === layer.id).reduce(\n        (agg, { name }) => Object.assign({ [name]: true }, agg),\n        {}\n      );\n    }\n    return Object.assign(result, agg);\n  }, {});\n\nexport const getFilteredLayers = layerList =>\n  layerList\n    .filter(layer => {\n      const layerName = layer.id;\n      if (layerName.substring(0, 7) === 'toggle-' && layerName !== 'toggle-turismo') {\n        return true;\n      }\n      return false;\n    })\n    .map(layer => ({\n      name: layer.id,\n      label: LAYERS[layer.id] ? LAYERS[layer.id].label : layer.id.substring(7),\n      type: 'layer',\n      color: LAYERS[layer.id] ? LAYERS[layer.id].color : 'darkgrey'\n    }));\n","import { getVisibleLayers } from './utils';\n\nexport const getFilterHandler = map => (layerOrSymbolType, type = null, layerId = null) => {\n  // Toggle Active Class\n  const legendItem = document.getElementById(layerOrSymbolType);\n  legendItem.classList.toggle('active');\n  // If Symbol, toggle for the symbol in the layer filter\n  if (type === 'symbol' && layerId) {\n    map.visibleLayers[layerId][layerOrSymbolType] = !map.visibleLayers[layerId][layerOrSymbolType];\n\n    const activeSymbolLayers = Object.keys(map.visibleLayers[layerId]).filter(\n      key => map.visibleLayers[layerId][key]\n    );\n    if (activeSymbolLayers.length > 0) {\n      map.setLayoutProperty(layerId, 'visibility', 'visible');\n      return map.setFilter(layerId, [\n        activeSymbolLayers.length === 1 ? '==' : 'in',\n        'symbol',\n        ...activeSymbolLayers\n      ]);\n    }\n    // TODO: Until we figure out how to setFilter of none?\n    return map.setLayoutProperty(layerId, 'visibility', 'none');\n  }\n  map.visibleLayers[layerOrSymbolType] = !map.visibleLayers[layerOrSymbolType];\n  const isToggledOn = map.visibleLayers[layerOrSymbolType];\n\n  // Toggle Layers\n  map.setLayoutProperty(layerOrSymbolType, 'visibility', isToggledOn ? 'visible' : 'none');\n  return;\n};\n\nexport const getNoFilterHandler = (map, { filteredLayers, layerList }) => () => {\n  filteredLayers.map(layer => map.setLayoutProperty(layer.name, 'visibility', 'visible'));\n  filteredLayers.map(({ name }) => map.setFilter(name, null));\n  map.visibleLayers = getVisibleLayers(layerList);\n  const legendItemEls = document.querySelectorAll(`.legend-item`);\n  [].forEach.call(legendItemEls, item => {\n    item.classList.add('active');\n  });\n};\n","export default feature =>\n  `<div class=\"popup-header\">\n    <h3>\n        <a\n          href=\"${feature.properties.link}\"\n          >\n          ${feature.properties.Estación}\n        </a>\n    </h3>\n    <div class=\"popup-image\">\n        <a\n          href=\"${feature.properties.link}\"\n          >\n          <img\n            src=\"${feature.properties.Image}\"\n            alt=\"Image del Estación ${feature.properties.Estación}\"\n          />\n        </a>\n      \n    </div>\n  </div>\n  <div class=\"popup-content\">\n    <div class=\"popup-description\">\n      <p>${feature.properties.description}</p>\n    </div>\n    <a\n      class=\"popup-button\"\n      href=\"${feature.properties.link}\"\n      >\n      Más informacíon\n    </a>\n  </div>\n  `;\n","/* global mapboxgl */\n/* eslint-disable no-irregular-whitespace */\n/* eslint-disable no-undef */\n\nimport popupComponent from './components/popup';\n\nimport { MAP, LAYER_ID, ANIMATION_DURATION, ACCESS_TOKEN } from './config';\n\nmapboxgl.accessToken = ACCESS_TOKEN;\n\nconst DEFAULT_MAP = {\n  container: 'map'\n};\n\nexport function createCompass() {\n  const leftEl = document.querySelector('.mapboxgl-ctrl-bottom-left');\n  const compass = document.createElement('div');\n\n  compass.innerHTML = `<div class=\"mapboxgl-ctrl mapboxgl-ctrl-group\">\n      <button class=\"mapboxgl-ctrl-icon mapboxgl-ctrl-compass\" type=\"button\" aria-label=\"Reset North\"> \n      <span class=\"mapboxgl-ctrl-compass-arrow\" style=\"transform: rotate(0deg);\"></span> \n    </button> \n  </div>`;\n\n  compass.onclick = () => {\n    map.flyTo({\n      center: DEFAULT_MAP.center\n    });\n  };\n  leftEl.appendChild(compass);\n}\n\nexport default function getMap() {\n  const map = new mapboxgl.Map(\n    // Set defaults, allow the config to override\n    Object.assign(DEFAULT_MAP, MAP)\n  );\n\n  const popup = new mapboxgl.Popup();\n\n  // Create a mapboxgl.Popup from the default popup component.\n  const showPopup = feature => {\n    popup\n      .setLngLat(feature.geometry.coordinates)\n      .setHTML(popupComponent(feature))\n      .addTo(map);\n    popup.on('close', () => {\n      map.flyTo({\n        center: DEFAULT_MAP.center,\n        duration: ANIMATION_DURATION\n      });\n    });\n\n    return popup;\n  };\n\n  // HANDLE MAP EVENTS\n\n  map.on('click', LAYER_ID, e => {\n    const feature = e.features[0];\n    setTimeout(() => {\n      map.flyTo({\n        center: feature.geometry.coordinates,\n        duration: ANIMATION_DURATION\n      });\n      showPopup(feature);\n    }, 200);\n  });\n\n  //FULL SCREEN MODE\n\n  map.addControl(new mapboxgl.FullscreenControl());\n  // Add zoom conntrol\n  const nav = new mapboxgl.NavigationControl({ showCompass: false });\n  map.addControl(nav, 'top-left');\n  // disable scrollZoom\n  map.scrollZoom.disable();\n  createCompass();\n  return map;\n}\n","/* eslint-disable no-irregular-whitespace */\n\nimport legendComponent from './components/legend';\nimport { getVisibleLayers, getFilteredLayers } from './utils';\nimport { getFilterHandler, getNoFilterHandler } from './handlers';\nimport getMap from './map';\nimport '../assets/styles/index.scss';\nimport { SOURCE_TYPES } from './config';\n\n// instantiate the map instance\nconst map = getMap();\n// debugging only\n// window.map = map;\nwindow.tcat = window.tcat || {};\n\nwindow.tcat.toggleLegend = () => {\n  const legendEl = document.getElementById('legend');\n  legendEl.classList.toggle('active');\n};\n\n// HANDLE POPUPS\n\nmap.visibleLayers = {};\n\nmap.on('load', () => {\n  const layerList = map.getStyle().layers;\n\n  map.visibleLayers = getVisibleLayers(layerList);\n  let filteredLayers = getFilteredLayers(layerList);\n\n  const legendEl = document.getElementById(`legend`);\n\n  // This is where we combine the symbol layer SOURCE_TYPES with filteredLayers\n  legendEl.innerHTML = legendComponent([...SOURCE_TYPES, ...filteredLayers]);\n\n  // HANDLE MAP LOAD\n  window.tcat.handleFilter = getFilterHandler(map);\n  window.tcat.noFilter = getNoFilterHandler(map, { layerList, filteredLayers });\n});\n\n// Press Command to Scrollzoom\ndocument.body.addEventListener('keydown', function(event) {\n  const { metaKey, ctrlKey } = event;\n  if (metaKey || ctrlKey) {\n    map.scrollZoom.enable();\n  }\n});\ndocument.body.addEventListener('keyup', function(event) {\n  const { metaKey, ctrlKey } = event;\n  if (metaKey || ctrlKey) {\n    map.scrollZoom.disable();\n  }\n});\n"]}