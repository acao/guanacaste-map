{"version":3,"sources":["src/config/layers.js","src/config/text.js","src/config/index.js","src/components/legend.js","src/components/popup.js","src/utils.js","src/handlers.js","src/map.js","src/index.js"],"names":["label","color","en","es","default","MAP","ACCESS_TOKEN","module","exports","layers","text","getArg","arg","T","LEGEND_TITLE","allLayers","map","layer","hasFilters","legendItemWithFilters","legendItem","join","LEGEND_VIEW_ALL","LEGEND_VIEW_NONE","name","legendItemChild","value","layerId","filters","feature","properties","link","Estaci√≥n","Image","POPUP_IMAGE_ALT_PREFIX","description","POPUP_MORE_INFO","filteringLayers","Object","entries","LAYERS","filter","filterOn","length","layerName","filteringLayersList","hasToggle","id","substring","getVisibleLayers","layerList","forceValue","LAYERS_ACTIVE","reduce","agg","result","layerIndex","indexOf","assign","getFilteredLayers","layerC","getLayerToggleHandler","document","getElementById","classList","toggle","visibleLayers","isToggledOn","visibility","setLayoutProperty","getFilterLayerToggleHandler","legendItemEls","querySelectorAll","currentLayerState","values","some","item","forEach","call","add","remove","keys","setFilter","getFilterToggleHandler","layerConfig","layerData","activeFilterLayers","key","getShowAllHandler","filteredLayers","getHideAllHandler","createCompass","getMap","mapboxgl","accessToken","DEFAULT_MAP","handleInitialLoad","toggleLayer","initialLoaded","getStyle","tcat","handleLayerToggle","handleFilterToggle","handleFilterLayerToggle","handleShowAll","handleHideAll","isVisible","leftEl","querySelector","compass","createElement","innerHTML","onclick","flyTo","center","appendChild","Map","popup","Popup","hasPopups","on","e","features","geometry","coordinates","ANIMATION_DURATION","setLngLat","setHTML","addTo","addControl","FullscreenControl","nav","NavigationControl","showCompass","scrollZoom","disable","window","toggleLegend","body","addEventListener","event","metaKey","ctrlKey","enable"],"mappings":"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","file":"src.7fc9ab8e.map","sourceRoot":"..","sourcesContent":["export default {\n  \"toggle-turismo\": {\n    label: \"Turismo\",\n    color: \"#CCCC00\",\n    filterOn: \"symbol\",\n    hasPopups: true,\n    filters: [\n      {\n        value: \"biological\",\n        label: \"Biological\"\n      },\n      {\n        value: \"tourist\",\n        label: \"Touristo\"\n      }\n    ]\n  },\n  \"toggle-unesco\": { label: \"UNESCO\", color: \"#CCCC00\" },\n  \"toggle-sectores\": { label: \"Sectores\", color: \"#449438\" },\n  \"toggle-ecosistemas\": {\n    label: \"Ecosistemas\",\n    color: \"#444\",\n    filterOn: \"Name\",\n    filters: [\n      {\n        value: \"Marino\",\n        label: \"Marino\",\n        color: \"hsl(221, 100%, 72%)\"\n      },\n      {\n        value: \"Bosque Seco\",\n        label: \"Bosque Seco\",\n        color: \"hsl(64, 100%, 66%)\"\n      },\n      {\n        value: \"Bosque Lluvioso\",\n        label: \"Bosque Lluvioso\",\n        color: \"hsl(127, 96%, 64%)\"\n      },\n      {\n        value: \"Bosque Nuboso\",\n        label: \"Bosque Nuboso\",\n        color: \"hsl(305, 100%, 66%)\"\n      }\n    ]\n  }\n};\n","const es = {\n  LEGEND_TITLE: \"Puestos Estaci√≥nes y Tourismos\",\n  LEGEND_VIEW_ALL: \"Ver Todo\",\n  LEGEND_VIEW_NONE: \"Ver Nunca\",\n  POPUP_IMAGE_ALT_PREFIX: \"Image del Estaci√≥n\",\n  POPUP_MORE_INFO: \"M√°s informac√≠on\"\n};\n\nconst en = {\n  LEGEND_TITLE: \"English Legend Title\",\n  LEGEND_VIEW_ALL: \"View All\",\n  LEGEND_VIEW_NONE: \"View None\",\n  POPUP_IMAGE_ALT_PREFIX: \"Image of station\",\n  POPUP_MORE_INFO: \"More information\"\n};\n\nexport { es, es as default, en };\n","import { default as layers } from \"./layers\";\nimport { default as text } from \"./text\";\n\nconst MAP = {\n  // for creating mapboxgl.Map(). container defaults to 'map'\n  style: \"mapbox://styles/guanacaste/cjj079axn0aqu2so55fx6ln2x\",\n  center: [-85.61365526723557, 10.838261234356153],\n  zoom: 9.619976883678385,\n  scrollZoom: false\n  //\"sprite\": \"mapbox://sprites/mapbox/bright-v8\"\n};\n\nconst ACCESS_TOKEN =\n  \"pk.eyJ1IjoiZ3VhbmFjYXN0ZSIsImEiOiJjamowNzhuYnAwZXU2M2txczhsc21mbDVsIn0.amJMu3O1jfjcbg-B1qC7ww\";\n\nmodule.exports = {\n  LAYERS_ACTIVE: false,\n  ANIMATION_DURATION: 2000,\n  ACCESS_TOKEN,\n  MAP,\n  LAYERS: layers,\n  TEXT: text\n};\n","import { TEXT as T } from \"../config\";\nconst getArg = arg => (arg ? `'${arg}'` : null);\n\nexport default allLayers =>\n  `<div class=\"legend-wrapper\">\n    <h4 class=\"overlay-box toggle-button\" onClick=\"tcat.toggleLegend()\">\n        ${T.LEGEND_TITLE}\n        <span id=\"legend-toggle-icon\"></span>\n    </h4>\n    <div class=\"flex-child legend-inner\">\n\t\t\t<div id=\"legend-items\" class=\"overlay-box toggle-content\">\n          ${allLayers\n            .map(layer => {\n              if (layer.hasFilters) {\n                return legendItemWithFilters(layer);\n              }\n              return legendItem(layer);\n            })\n            .join(\"\")}\n\t\t\t</div>\n      <div id=\"legend-footer\" class=\"overlay-box toggle-content\">\n        <button class=\"button button-block-on-mobile\" onClick=\"tcat.handleShowAll()\">${\n          T.LEGEND_VIEW_ALL\n        }</button>\n        <button class=\"button button-block-on-mobile\" onClick=\"tcat.handleHideAll()\">${\n          T.LEGEND_VIEW_NONE\n        }</button>\n      </div>\n\t</div>\n</div>`;\n\nconst legendItem = ({ name, color, label }) => `\n  <div\n    class=\"legend-item\"\n    id=\"${name}\"\n    onClick=\"tcat.handleLayerToggle(${getArg(name)})\"\n  >\n    <span class=\"legend-key\" style=\"background-color: ${color}\"></span>\n    <span class=\"label\">${label}</span>\n  </div>`;\n\nconst legendItemChild = ({ value, layerId, color, label }) => `\n    <div\n      class=\"legend-item\"\n      id=\"${layerId}-${value}\"\n      onClick=\"tcat.handleFilterToggle(${getArg(layerId)}, ${getArg(value)})\"\n    >\n      <span class=\"legend-key\" style=\"background-color: ${color}\"></span>\n      <span class=\"label\">${label}</span>\n    </div>\n`;\n\nconst legendItemWithFilters = ({ name, color, label, filters }) => `\n  <div class=\"legend-item\" id=\"${name}\">\n    <span class=\"legend-key\" style=\"background-color: ${color}\"></span>\n    <span class=\"label\" onClick=\"tcat.handleFilterLayerToggle(${getArg(\n      name\n    )})\">${label}</span>\n    <div class=\"legend-items\">\n      ${filters.map(legendItemChild).join(\"\")}\n    </div>\n  </div>\n`;\n","import { TEXT as T } from \"../config\";\n\nexport default feature =>\n  `<div class=\"popup-header\">\n    <h3>\n        <a\n          href=\"${feature.properties.link}\"\n          >\n          ${feature.properties.Estaci√≥n}\n        </a>\n    </h3>\n    <div class=\"popup-image\">\n        <a\n          href=\"${feature.properties.link}\"\n          >\n          <img\n            src=\"${feature.properties.Image}\"\n            alt=\"${T.POPUP_IMAGE_ALT_PREFIX} ${feature.properties.Estaci√≥n}\"\n          />\n        </a>\n\n    </div>\n  </div>\n  <div class=\"popup-content\">\n    <div class=\"popup-description\">\n      <p>${feature.properties.description}</p>\n    </div>\n    <a\n      class=\"button button-block\"\n      href=\"${feature.properties.link}\"\n      >\n      ${T.POPUP_MORE_INFO}\n    </a>\n  </div>\n  `;\n","import { LAYERS, LAYERS_ACTIVE } from \"./config\";\n\nconst filteringLayers = Object.entries(LAYERS)\n  .filter(\n    ([, { filters, filterOn }]) =>\n      filterOn && filters && filters.length && filters.length > 0\n  )\n  .map(([layerName, { filters = [], filterOn }]) => {\n    return {\n      name: layerName,\n      filterOn,\n      filters\n    };\n  });\n\nexport const filteringLayersList = filteringLayers.map(({ name }) => name);\nconst hasToggle = ({ id }) => id.substring(0, 7) === \"toggle-\";\n\nexport const getVisibleLayers = (layerList, forceValue = LAYERS_ACTIVE) =>\n  layerList.filter(hasToggle).reduce((agg, layer) => {\n    let result = { [layer.id]: forceValue };\n    let layerIndex = filteringLayersList.indexOf(layer.id);\n    if (layerIndex >= 0) {\n      const layer = filteringLayers[layerIndex];\n      result[layer.name] = layer.filters.reduce(\n        (agg, { value }) => Object.assign({ [value]: forceValue }, agg),\n        {}\n      );\n    }\n    return Object.assign(result, agg);\n  }, {});\n\nexport const getFilteredLayers = layerList =>\n  layerList.filter(hasToggle).map(layer => {\n    const layerC = LAYERS[layer.id];\n    const hasFilters = layerC.filters && !!layerC.filters.length;\n    return {\n      ...layerC,\n      hasFilters,\n      filters:\n        hasFilters &&\n        layerC.filters.map(filter => ({ ...filter, layerId: layer.id })),\n      name: layer.id,\n      label: layerC && layerC.label ? layerC.label : layer.id.substring(7)\n    };\n  });\n","import { LAYERS } from \"./config\";\nimport { getVisibleLayers } from \"./utils\";\n\n/**\n Toggles the entire layer for a layer without a filter\n**/\nexport const getLayerToggleHandler = map => layerId => {\n  // toggle class\n  const legendItem = document.getElementById(layerId);\n  legendItem.classList.toggle(\"active\");\n  // toggle state\n  map.visibleLayers[layerId] = !map.visibleLayers[layerId];\n  const isToggledOn = map.visibleLayers[layerId];\n  const visibility = isToggledOn ? \"visible\" : \"none\";\n  // toggle layer visibility\n  return map.setLayoutProperty(layerId, \"visibility\", visibility);\n};\n\n/**\n Toggles the entire layer for a layer with a filter\n**/\nexport const getFilterLayerToggleHandler = map => layerId => {\n  const legendItem = document.getElementById(layerId);\n  legendItem.classList.toggle(\"active\");\n  const legendItemEls = document.querySelectorAll(`#${layerId} .legend-item`);\n  const currentLayerState = map.visibleLayers[layerId];\n\n  // if any items were active, they are now all inactive\n  const isToggledOn = !Object.values(currentLayerState).some(item => item);\n\n  // Toggle the active class for children\n\n  [].forEach.call(legendItemEls, item => {\n    isToggledOn\n      ? item.classList.add(\"active\")\n      : item.classList.remove(\"active\");\n  });\n\n  const visibility = isToggledOn ? \"visible\" : \"none\";\n\n  // update map.visibleLayers state\n  map.visibleLayers[layerId] = Object.keys(currentLayerState).reduce(\n    (agg, value) => ({ ...agg, [value]: isToggledOn }),\n    {}\n  );\n\n  // If we are toggling the layer back on, display everything\n  isToggledOn && map.setFilter(layerId, null);\n\n  // Toggle Layer visibility\n  return map.setLayoutProperty(layerId, \"visibility\", visibility);\n};\n\n/**\n * Toggles just the filter item.\n */\nexport const getFilterToggleHandler = map => (layerId, value) => {\n  // Toggle Active Class\n  const legendItem = document.getElementById(`${layerId}-${value}`);\n  legendItem.classList.toggle(\"active\");\n\n  if (layerId) {\n    const layerConfig = LAYERS[layerId];\n    const layerData = map.visibleLayers[layerId];\n    map.visibleLayers[layerId][value] = !layerData[value];\n    // If this filter is active, it's parent should be active too\n    if (map.visibleLayers[layerId][value]) {\n      document.getElementById(layerId).classList.add(\"active\");\n    }\n    if (!Object.values(map.visibleLayers[layerId]).some(item => item)) {\n      document.getElementById(layerId).classList.remove(\"active\");\n    }\n\n    const activeFilterLayers = Object.keys(layerData).filter(\n      key => layerData[key]\n    );\n    if (activeFilterLayers.length > 0) {\n      map.setLayoutProperty(layerId, \"visibility\", \"visible\");\n      // build the filter query, using filterOn for the field to filter on,\n      // and spreading the activeFilterLayers\n      return map.setFilter(layerId, [\n        activeFilterLayers.length === 1 ? \"==\" : \"in\",\n        layerConfig.filterOn,\n        ...activeFilterLayers\n      ]);\n    }\n\n    // TODO: Until we figure out how to setFilter of none?\n    return map.setLayoutProperty(layerId, \"visibility\", \"none\");\n  }\n};\n\n/**\n * To reset the entire layer/filter state\n */\nexport const getShowAllHandler = (map, { filteredLayers, layerList }) => () => {\n  filteredLayers.map(layer =>\n    map.setLayoutProperty(layer.name, \"visibility\", \"visible\")\n  );\n  filteredLayers.map(({ name }) => map.setFilter(name, null));\n  map.visibleLayers = getVisibleLayers(layerList, true);\n  const legendItemEls = document.querySelectorAll(`.legend-item`);\n  [].forEach.call(legendItemEls, item => {\n    item.classList.add(\"active\");\n  });\n};\n\n/**\n * To hide the entire layer/filter state\n */\nexport const getHideAllHandler = (map, { filteredLayers, layerList }) => () => {\n  filteredLayers.map(layer =>\n    map.setLayoutProperty(layer.name, \"visibility\", \"none\")\n  );\n  map.visibleLayers = getVisibleLayers(layerList);\n  const legendItemEls = document.querySelectorAll(`.legend-item`);\n  [].forEach.call(legendItemEls, item => {\n    item.classList.remove(\"active\");\n  });\n};\n","/* global mapboxgl */\n/* eslint-disable no-irregular-whitespace */\n/* eslint-disable no-undef */\n\nimport popupComponent from \"./components/popup\";\n\nimport { getVisibleLayers, getFilteredLayers } from \"./utils\";\nimport {\n  getLayerToggleHandler,\n  getFilterToggleHandler,\n  getShowAllHandler,\n  getHideAllHandler,\n  getFilterLayerToggleHandler\n} from \"./handlers\";\n\nimport {\n  MAP,\n  ANIMATION_DURATION,\n  ACCESS_TOKEN,\n  LAYERS,\n  LAYERS_ACTIVE\n} from \"./config\";\n\nmapboxgl.accessToken = ACCESS_TOKEN;\n\nconst DEFAULT_MAP = {\n  container: \"map\"\n};\n\nexport const handleInitialLoad = map => {\n  Object.entries(LAYERS).forEach(([layerId]) =>\n    toggleLayer(map, layerId, LAYERS_ACTIVE)\n  );\n  map.initialLoaded = true;\n  map.layerList = map.getStyle().layers;\n\n  map.visibleLayers = getVisibleLayers(map.layerList, false);\n  map.filteredLayers = getFilteredLayers(map.layerList);\n  // HANDLE MAP LOAD\n  window.tcat.handleLayerToggle = getLayerToggleHandler(map);\n  window.tcat.handleFilterToggle = getFilterToggleHandler(map);\n  window.tcat.handleFilterLayerToggle = getFilterLayerToggleHandler(map);\n  window.tcat.handleShowAll = getShowAllHandler(map, {\n    layerList: map.layerList,\n    filteredLayers: map.filteredLayers\n  });\n  window.tcat.handleHideAll = getHideAllHandler(map, {\n    layerList: map.layerList,\n    filteredLayers: map.filteredLayers\n  });\n};\n\nexport const toggleLayer = (map, layerId, isVisible = true) => {\n  const visibility = isVisible ? \"visible\" : \"none\";\n  map.setLayoutProperty(layerId, \"visibility\", visibility);\n};\n\nexport function createCompass(map) {\n  const leftEl = document.querySelector(\".mapboxgl-ctrl-bottom-left\");\n  const compass = document.createElement(\"div\");\n\n  compass.innerHTML = `<div class=\"mapboxgl-ctrl mapboxgl-ctrl-group\">\n      <button class=\"mapboxgl-ctrl-icon mapboxgl-ctrl-compass\" type=\"button\" aria-label=\"Reset North\">‚Ä®\n      <span class=\"mapboxgl-ctrl-compass-arrow\" style=\"transform: rotate(0deg);\"></span>‚Ä®\n    </button>‚Ä®\n  </div>`;\n\n  compass.onclick = () => {\n    map.flyTo({\n      center: DEFAULT_MAP.center\n    });\n  };\n  leftEl.appendChild(compass);\n}\n\nexport default function getMap() {\n  const map = new mapboxgl.Map(\n    // Set defaults, allow the config to override\n    Object.assign(DEFAULT_MAP, MAP)\n  );\n\n  const popup = new mapboxgl.Popup();\n\n  // Create a mapboxgl.Popup from the default popup component.\n  const showPopup = feature => {\n    popup\n      .setLngLat(feature.geometry.coordinates)\n      .setHTML(popupComponent(feature))\n      .addTo(map);\n    popup.on(\"close\", () => {\n      map.flyTo({\n        center: DEFAULT_MAP.center,\n        duration: ANIMATION_DURATION\n      });\n    });\n\n    return popup;\n  };\n\n  // HANDLE MAP EVENTS\n\n  Object.entries(LAYERS)\n    .filter(([, layerConfig]) => layerConfig.hasPopups)\n    .forEach(([layerId]) => {\n      map.on(\"click\", layerId, e => {\n        const feature = e.features[0];\n        setTimeout(() => {\n          map.flyTo({\n            center: feature.geometry.coordinates,\n            duration: ANIMATION_DURATION\n          });\n          showPopup(feature);\n        }, 200);\n      });\n    });\n\n  //FULL SCREEN MODE\n  map.addControl(new mapboxgl.FullscreenControl());\n  // Add zoom conntrol\n  const nav = new mapboxgl.NavigationControl({ showCompass: false });\n  map.addControl(nav, \"top-left\");\n  // disable scrollZoom\n  map.scrollZoom.disable();\n  createCompass(map);\n  return map;\n}\n","/* eslint-disable no-irregular-whitespace */\n\nimport legendComponent from \"./components/legend\";\n\nimport getMap, { handleInitialLoad } from \"./map\";\n\nimport \"../assets/styles/index.scss\";\n\n// instantiate the map instance\nconst map = getMap();\n\nmap.initialLoaded = false;\nmap.visibleLayers = {};\nmap.layerList = [];\n\n// debugging only\n// window.map = map;\nwindow.tcat = window.tcat || {};\n\nwindow.tcat.toggleLegend = () => {\n  const legendEl = document.getElementById(\"legend\");\n  legendEl.classList.toggle(\"active\");\n};\n\nmap.on(\"data\", () => {\n  if (!map.initialLoaded) {\n    handleInitialLoad(map);\n  }\n});\n\nmap.on(\"load\", () => {\n  const legendEl = document.getElementById(`legend`);\n\n  // This is where we combine the symbol layer SOURCE_TYPES with filteredLayers\n  legendEl.innerHTML = legendComponent([...map.filteredLayers]);\n});\n\n// Press Command to Scrollzoom\ndocument.body.addEventListener(\"keydown\", function(event) {\n  const { metaKey, ctrlKey } = event;\n  if (metaKey || ctrlKey) {\n    map.scrollZoom.enable();\n  }\n});\ndocument.body.addEventListener(\"keyup\", function(event) {\n  const { metaKey, ctrlKey } = event;\n  if (metaKey || ctrlKey) {\n    map.scrollZoom.disable();\n  }\n});\n"]}