{"version":3,"sources":["src/config/layers.js","src/config/text.js","src/config/index.js","src/components/legend.js","src/utils.js","src/handlers.js","src/components/popup.js","src/map.js","src/index.js"],"names":["label","color","en","es","default","MAP","ACCESS_TOKEN","module","exports","layers","text","getArg","arg","T","LEGEND_TITLE","allLayers","map","layer","hasFilters","legendItemWithFilters","legendItem","join","LEGEND_VIEW_ALL","name","legendItemChild","value","layerId","filters","filteringLayers","Object","entries","LAYERS","filter","filterOn","length","layerName","filteringLayersList","hasToggle","id","substring","getVisibleLayers","layerList","reduce","agg","result","layerIndex","indexOf","assign","getFilteredLayers","layerC","getLayerToggleHandler","document","getElementById","classList","toggle","visibleLayers","isToggledOn","visibility","setLayoutProperty","getFilterLayerToggleHandler","legendItemEls","querySelectorAll","currentLayerState","values","some","item","forEach","call","add","remove","keys","setFilter","getFilterToggleHandler","layerConfig","layerData","activeFilterLayers","key","getNoFilterHandler","filteredLayers","feature","properties","link","Estaci√≥n","Image","POPUP_IMAGE_ALT_PREFIX","description","POPUP_MORE_INFO","createCompass","getMap","mapboxgl","accessToken","DEFAULT_MAP","leftEl","querySelector","compass","createElement","innerHTML","onclick","flyTo","center","appendChild","Map","popup","Popup","hasPopups","on","e","features","geometry","coordinates","ANIMATION_DURATION","setLngLat","setHTML","addTo","addControl","FullscreenControl","nav","NavigationControl","showCompass","scrollZoom","disable","window","tcat","toggleLegend","getStyle","handleLayerToggle","handleFilterToggle","handleFilterLayerToggle","noFilter","body","addEventListener","event","metaKey","ctrlKey","enable"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,CACK,iBAAA,CACT,MAAA,UACA,MAAA,UACG,SAAA,SACC,WAAA,EACF,QAAA,CACP,CACS,MAAA,aACA,MAAA,cAET,CACS,MAAA,UACA,MAAA,cAII,gBAAA,CAAEA,MAAO,SAAUC,MAAO,WACxB,kBAAA,CAAED,MAAO,WAAYC,MAAO,WACzB,qBAAA,CACb,MAAA,cACA,MAAA,OACG,SAAA,OACD,QAAA,CACP,CACS,MAAA,SACA,MAAA,SACA,MAAA,uBAET,CACS,MAAA,cACA,MAAA,cACA,MAAA,sBAET,CACS,MAAA,kBACA,MAAA,kBACA,MAAA,sBAET,CACS,MAAA,gBACA,MAAA,gBACA,MAAA;;AC5BaC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAd5B,IAAMC,EAAK,CACK,aAAA,iCACG,gBAAA,WACO,uBAAA,qBACP,gBAAA,mBAGbD,EAAK,CACK,aAAA,uBACG,gBAAA,WACO,uBAAA,mBACP,gBAAA,oBAGVC,QAAAA,GAAAA,EAAUC,QAAAA,QAAND,EAAeD,QAAAA,GAAAA;;ACC5B,aAfA,IAAA,EAAA,QAAA,YAeA,EAAA,EAAA,GAdA,EAAA,QAAA,UAcA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAZA,IAAMG,EAAM,CAEH,MAAA,uDACC,OAAA,EAAE,kBAAmB,oBACvB,KAAA,kBACM,YAAA,GAIRC,EACJ,gGAEFC,OAAOC,QAAU,CACK,mBAAA,IADL,aAAA,EAAA,IAAA,EAIPC,OAAAA,EAJO,QAKTC,KAAAA,EAAAA;;AC2BR,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA/CA,IAAA,EAAA,QAAA,aACMC,EAAS,SAAA,GAAQC,OAAAA,EAAUA,IAAAA,EAAS,IAAA,MAE3B,QAAA,QAAA,SAAA,GAGLC,MAAAA,mHAAAA,EAAEC,KAAAA,aAKAC,sLAAAA,EACCC,IAAI,SAAS,GACRC,OAAAA,EAAMC,WACDC,EAAsBF,GAExBG,EAAWH,KAEnBI,KAAK,IAGuBR,6HAAAA,EAAES,KAAAA,gBAlB5B,0CAuBf,IAAMF,EAAa,SAAA,GAAGG,IAAAA,EAAAA,EAAAA,KAAMtB,EAAAA,EAAAA,MAAOD,EAAAA,EAAAA,MAGzBuB,MAAAA,qDAAAA,EAC4BZ,0CAAAA,EAAOY,GAEWtB,kEAAAA,EAC9BD,sCAAAA,EAPP,qBAUbwB,EAAkB,SAAA,GAAGC,IAAAA,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,QAASzB,EAAAA,EAAAA,MAAOD,EAAAA,EAAAA,MAGtC0B,MAAAA,2DAAAA,EAAWD,IAAAA,EACkBd,6CAAAA,EAAOe,GAAaf,KAAAA,EAAOc,GAEVxB,sEAAAA,EAC9BD,wCAAAA,EAPJ,yBAWlBmB,EAAwB,SAAA,GAAGI,IAAAA,EAAAA,EAAAA,KAAMtB,EAAAA,EAAAA,MAAOD,EAAAA,EAAAA,MAAO2B,EAAAA,EAAAA,QACbJ,MAAAA,2CAAAA,EACgBtB,6DAAAA,EACQU,4EAAAA,EAC1DY,GACKvB,MAAAA,EAEH2B,kDAAAA,EAAQX,IAAIQ,GAAiBH,KAAK,IAPZ;;ACfvB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,QAAA,iBAAA,QAAA,yBAAA,EAAA,IAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,GAAA,EAAA,WAAA,OAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,OAAA,YAAA,OAAA,GAAA,OAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yDAAA,GAhCP,EAAA,QAAA,YAgCO,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA9BP,IAAMO,EAAkBC,OAAOC,QAAQC,EAAf,QACrBC,OACC,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAML,EAAAA,EAAAA,QACJM,OADaA,EAAAA,UACDN,GAAWA,EAAQO,QAAUP,EAAQO,OAAS,IAE7DlB,IAAI,SAA6C,GAAA,IAAA,EAAA,EAAA,EAAA,GAA3CmB,EAA2C,EAAA,GAAA,EAAA,EAAA,GAA9BR,EAAAA,EAAAA,QAAAA,OAAU,IAAA,EAAA,GAAoB,EACzC,MAAA,CACCQ,KAAAA,EADD,SADyBF,EAAAA,SAI9BN,QAAAA,KAIOS,EAAsBR,QAAAA,oBAAAA,EAAgBZ,IAAI,SAAA,GAAcO,OAAXA,EAAAA,OACpDc,EAAY,SAAA,GAAYC,MAAuB,YAAhCA,EAAAA,GAAYC,UAAU,EAAG,IAEjCC,EAAmB,QAAA,iBAAA,SAAA,GAC9BC,OAAAA,EAAUT,OAAOK,GAAWK,OAAO,SAACC,EAAK1B,GACnC2B,IAAAA,EAAY3B,EAAAA,GAAAA,EAAMqB,IAAK,GACvBO,EAAaT,EAAoBU,QAAQ7B,EAAMqB,IAC/CO,GAAAA,GAAc,EAAG,CACb5B,IAAAA,EAAQW,EAAgBiB,GACvB5B,EAAAA,EAAMM,MAAQN,EAAMU,QAAQe,OACjC,SAACC,EAAD,GAAQlB,IAAAA,EAAAA,EAAAA,MAAYI,OAAAA,OAAOkB,OAAUtB,EAAAA,GAAAA,GAAQ,GAAQkB,IACrD,IAGGd,OAAAA,OAAOkB,OAAOH,EAAQD,IAC5B,KAEQK,EAAoB,QAAA,kBAAA,SAAA,GAC/BP,OAAAA,EAAUT,OAAOK,GAAWrB,IAAI,SAAS,GACjCiC,IAAAA,EAASlB,EAAOd,OAAAA,EAAMqB,IACtBpB,EAAa+B,EAAOtB,WAAasB,EAAOtB,QAAQO,OAEjDe,OAAAA,EAAAA,GAAAA,EADL,CAAA,WAAA,EAII/B,QAAAA,GACA+B,EAAOtB,QAAQX,IAAI,SAAA,GAAgBgB,OAAAA,EAAAA,GAAAA,EAAQN,CAAAA,QAAST,EAAMqB,OACtDrB,KAAAA,EAAMqB,GACLW,MAAAA,GAAUA,EAAOjD,MAAQiD,EAAOjD,MAAQiB,EAAMqB,GAAGC,UAAU;;ACoDjE,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,QAAA,uBAAA,QAAA,4BAAA,QAAA,2BAAA,EAAA,IAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,GA/FP,EAAA,QAAA,YACA,EAAA,QAAA,WA8FO,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAzFA,IAAMW,EAAwB,QAAA,sBAAA,SAAA,GAAO,OAAA,SAAW,GAElCC,SAASC,eAAe1B,GAChC2B,UAAUC,OAAO,UAExBC,EAAAA,cAAc7B,IAAYV,EAAIuC,cAAc7B,GAC1C8B,IACAC,EADczC,EAAIuC,cAAc7B,GACL,UAAY,OAEtCV,OAAAA,EAAI0C,kBAAkBhC,EAAS,aAAc+B,KAMzCE,EAA8B,QAAA,4BAAA,SAAA,GAAO,OAAA,SAAW,GACxCR,SAASC,eAAe1B,GAChC2B,UAAUC,OAAO,UACtBM,IAAAA,EAAgBT,SAASU,iBAAqBnC,IAAAA,EAApD,iBACMoC,EAAoB9C,EAAIuC,cAAc7B,GAGtC8B,GAAe3B,OAAOkC,OAAOD,GAAmBE,KAAK,SAAA,GAAQC,OAAAA,IAIhEC,GAAAA,QAAQC,KAAKP,EAAe,SAAQ,GAEjCK,EAAAA,EAAKZ,UAAUe,IAAI,UACnBH,EAAKZ,UAAUgB,OAAO,YAGtBZ,IAAAA,EAAaD,EAAc,UAAY,OAYtCxC,OATHuC,EAAAA,cAAc7B,GAAWG,OAAOyC,KAAKR,GAAmBpB,OAC1D,SAACC,EAAKlB,GAAgBkB,OAAAA,EAAAA,GAAAA,EAAMlB,EAAAA,GAAAA,EAAQ+B,KACpC,IAIaxC,GAAAA,EAAIuD,UAAU7C,EAAS,MAG/BV,EAAI0C,kBAAkBhC,EAAS,aAAc+B,KAMzCe,EAAyB,QAAA,uBAAA,SAAA,GAAO,OAAA,SAAC9C,EAASD,GAKjDC,GAHeyB,SAASC,eAAkB1B,EAAWD,IAAAA,GAC9C4B,UAAUC,OAAO,UAExB5B,EAAS,CACL+C,IAAAA,EAAc1C,EAAOL,OAAAA,GACrBgD,EAAY1D,EAAIuC,cAAc7B,GAChC6B,EAAAA,cAAc7B,GAASD,IAAUiD,EAAUjD,GAE3CT,EAAIuC,cAAc7B,GAASD,IACpB2B,SAAAA,eAAe1B,GAAS2B,UAAUe,IAAI,UAE5CvC,OAAOkC,OAAO/C,EAAIuC,cAAc7B,IAAUsC,KAAK,SAAA,GAAQC,OAAAA,KACjDb,SAAAA,eAAe1B,GAAS2B,UAAUgB,OAAO,UAG9CM,IAAAA,EAAqB9C,OAAOyC,KAAKI,GAAW1C,OAChD,SAAA,GAAO0C,OAAAA,EAAUE,KAEfD,OAAAA,EAAmBzC,OAAS,GAC1BwB,EAAAA,kBAAkBhC,EAAS,aAAc,WAGtCV,EAAIuD,UAAU7C,EACnBiD,CAA8B,IAA9BA,EAAmBzC,OAAe,KAAO,KACzCuC,EAAYxC,UACT0C,OAAAA,EAAAA,MAKA3D,EAAI0C,kBAAkBhC,EAAS,aAAc,WAO3CmD,EAAqB,QAAA,mBAAA,SAChC7D,EADgC,GAE9B8D,IAAAA,EAAAA,EAAAA,eAAgBrC,EAAAA,EAAAA,UACf,OAAA,WACYzB,EAAAA,IAAI,SAAA,GACjBA,OAAAA,EAAI0C,kBAAkBzC,EAAMM,KAAM,aAAc,aAEnCP,EAAAA,IAAI,SAAA,GAAGO,IAAAA,EAAAA,EAAAA,KAAWP,OAAAA,EAAIuD,UAAUhD,EAAM,QACjDgC,EAAAA,eAAgB,EAAiBd,EAAAA,kBAAAA,GAC/BmB,IAAAA,EAAgBT,SAASU,iBAA/B,gBACGK,GAAAA,QAAQC,KAAKP,EAAe,SAAQ,GAChCP,EAAAA,UAAUe,IAAI;;ACxGR,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFf,IAAA,EAAA,QAAA,aAEe,QAAA,QAAA,SAAA,GAIGW,MAAAA,qEAAAA,EAAQC,WAAWC,KAEzBF,6BAAAA,EAAQC,WAAWE,SAKbH,yFAAAA,EAAQC,WAAWC,KAGlBF,oDAAAA,EAAQC,WAAWG,MACnBtE,uBAAAA,EAAEuE,KAAAA,uBAA0BL,IAAAA,EAAQC,WAAWE,SAQvDH,uIAAAA,EAAQC,WAAWK,YAIhBN,qEAAAA,EAAQC,WAAWC,KAEzBpE,qBAAAA,EAAEyE,KAAAA,gBA7BK;;ACmFd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IArFD,IAAA,EAAA,WAAA,OAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,OAAA,YAAA,OAAA,GAAA,OAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yDAAA,GAagBC,QAAAA,cAAAA,EAqBQC,QAAAA,QAAAA,EA9BxB,IAAA,EAAA,QAAA,sBAiFC,EAAA,EAAA,GAhFD,EAAA,QAAA,YAgFC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA9EDC,SAASC,YAAcpF,EAAvB,aAEA,IAAMqF,EAAc,CACP,UAAA,OAGN,SAASJ,IACRK,IAAAA,EAASzC,SAAS0C,cAAc,8BAChCC,EAAU3C,SAAS4C,cAAc,OAE/BC,EAAAA,UAAR,+RASQC,EAAAA,QAAU,WACZC,IAAAA,MAAM,CACAP,OAAAA,EAAYQ,UAGjBC,EAAAA,YAAYN,GAGN,SAASN,IAChBxE,IAAAA,EAAM,IAAIyE,SAASY,IAEhBtD,OAAAA,OAAO4C,EAAatF,EAA3B,MAGIiG,EAAQ,IAAIb,SAASc,MAoBpBzE,OAAAA,QAAQC,EAAf,QACGC,OAAO,SAAA,GAAqByC,OAArB,EAAA,EAAA,GAAA,GAAiC+B,YACxCxF,IAAI,SAAe,GAAA,IAAbU,EAAa,EAAA,EAAA,GAAA,GACd+E,EAAAA,GAAG,QAAS/E,EAAS,SAAK,GACtBqD,IAAAA,EAAU2B,EAAEC,SAAS,GAChB,WAAA,WACLT,EAAAA,MAAM,CACAnB,OAAAA,EAAQ6B,SAASC,YACfC,SAAAA,EAAAA,qBAzBF,SAAW,GAExBC,EAAAA,UAAUhC,EAAQ6B,SAASC,aAC3BG,SAAQ,EAAejC,EAAAA,SAAAA,IACvBkC,MAAMjG,GACHyF,EAAAA,GAAG,QAAS,WACZP,EAAAA,MAAM,CACAP,OAAAA,EAAYQ,OACVW,SAAAA,EAAAA,uBAmBE/B,CAAAA,IACT,SAMLmC,EAAAA,WAAW,IAAIzB,SAAS0B,mBAEtBC,IAAAA,EAAM,IAAI3B,SAAS4B,kBAAkB,CAAEC,aAAa,IAKnDtG,OAJHkG,EAAAA,WAAWE,EAAK,YAEhBG,EAAAA,WAAWC,UACfjC,IACOvE;;;;AC/BT,aAnDA,IAAA,EAAA,QAAA,uBAmDA,EAAA,EAAA,GAlDA,EAAA,QAAA,WACA,EAAA,QAAA,cAMA,EAAA,QAAA,SA2CA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GArDA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAAA,MAAA,KAAA,GAWA,QAAA,+BAGA,IAAMA,GAAM,EAAZ,EAAA,WAGAyG,OAAOC,KAAOD,OAAOC,MAAQ,GAE7BD,OAAOC,KAAKC,aAAe,WACRxE,SAASC,eAAe,UAChCC,UAAUC,OAAO,WAK5BtC,EAAIuC,cAAgB,GAEpBvC,EAAIyF,GAAG,OAAQ,WACPhE,IAAAA,EAAYzB,EAAI4G,WAAWnH,OAE7B8C,EAAAA,eAAgB,EAAiBd,EAAAA,kBAAAA,GACjCqC,IAAAA,GAAiB,EAAkBrC,EAAAA,mBAAAA,GAEtBU,SAASC,eAA1B,UAGS4C,WAAY,EAAoBlB,EAAAA,SAAAA,GAAAA,OAAAA,EAAAA,KAGlC4C,OAAAA,KAAKG,mBAAoB,EAAsB7G,EAAAA,uBAAAA,GAC/C0G,OAAAA,KAAKI,oBAAqB,EAAuB9G,EAAAA,wBAAAA,GACjD0G,OAAAA,KAAKK,yBAA0B,EAA4B/G,EAAAA,6BAAAA,GAC3D0G,OAAAA,KAAKM,UAAW,EAAmBhH,EAAAA,oBAAAA,EAAK,CAAEyB,UAAF,EAAaqC,eAAb,MAIjD3B,SAAS8E,KAAKC,iBAAiB,UAAW,SAASC,GACzCC,IAAAA,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,SACbD,GAAWC,IACTd,EAAAA,WAAWe,WAGnBnF,SAAS8E,KAAKC,iBAAiB,QAAS,SAASC,GACvCC,IAAAA,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,SACbD,GAAWC,IACTd,EAAAA,WAAWC","file":"src.a4f9eddb.map","sourceRoot":"..","sourcesContent":["export default {\n  \"toggle-turismo\": {\n    label: \"Turismo\",\n    color: \"#CCCC00\",\n    filterOn: \"symbol\",\n    hasPopups: true,\n    filters: [\n      {\n        value: \"biological\",\n        label: \"Biological\"\n      },\n      {\n        value: \"tourist\",\n        label: \"Touristo\"\n      }\n    ]\n  },\n  \"toggle-unesco\": { label: \"UNESCO\", color: \"#CCCC00\" },\n  \"toggle-sectores\": { label: \"Sectores\", color: \"#449438\" },\n  \"toggle-ecosistemas\": {\n    label: \"Ecosistemas\",\n    color: \"#444\",\n    filterOn: \"Name\",\n    filters: [\n      {\n        value: \"Marino\",\n        label: \"Marino\",\n        color: \"hsl(221, 100%, 72%)\"\n      },\n      {\n        value: \"Bosque Seco\",\n        label: \"Bosque Seco\",\n        color: \"hsl(64, 100%, 66%)\"\n      },\n      {\n        value: \"Bosque Lluvioso\",\n        label: \"Bosque Lluvioso\",\n        color: \"hsl(127, 96%, 64%)\"\n      },\n      {\n        value: \"Bosque Nuboso\",\n        label: \"Bosque Nuboso\",\n        color: \"hsl(305, 100%, 66%)\"\n      }\n    ]\n  }\n};\n","const es = {\n  LEGEND_TITLE: \"Puestos Estaci√≥nes y Tourismos\",\n  LEGEND_VIEW_ALL: \"Ver Todo\",\n  POPUP_IMAGE_ALT_PREFIX: \"Image del Estaci√≥n\",\n  POPUP_MORE_INFO: \"M√°s informac√≠on\"\n};\n\nconst en = {\n  LEGEND_TITLE: \"English Legend Title\",\n  LEGEND_VIEW_ALL: \"View All\",\n  POPUP_IMAGE_ALT_PREFIX: \"Image of station\",\n  POPUP_MORE_INFO: \"More information\"\n};\n\nexport { es, es as default, en };\n","import { default as layers } from \"./layers\";\nimport { default as text } from \"./text\";\n\nconst MAP = {\n  // for creating mapboxgl.Map(). container defaults to 'map'\n  style: \"mapbox://styles/guanacaste/cjj079axn0aqu2so55fx6ln2x\",\n  center: [-85.61365526723557, 10.838261234356153],\n  zoom: 9.619976883678385,\n  scrollZoom: false\n  //\"sprite\": \"mapbox://sprites/mapbox/bright-v8\"\n};\n\nconst ACCESS_TOKEN =\n  \"pk.eyJ1IjoiZ3VhbmFjYXN0ZSIsImEiOiJjamowNzhuYnAwZXU2M2txczhsc21mbDVsIn0.amJMu3O1jfjcbg-B1qC7ww\";\n\nmodule.exports = {\n  ANIMATION_DURATION: 2000,\n  ACCESS_TOKEN,\n  MAP,\n  LAYERS: layers,\n  TEXT: text\n};\n","import { TEXT as T } from \"../config\";\nconst getArg = arg => (arg ? `'${arg}'` : null);\n\nexport default allLayers =>\n  `<div class=\"legend-wrapper\">\n    <h4 class=\"overlay-box toggle-button\" onClick=\"tcat.toggleLegend()\">\n        ${T.LEGEND_TITLE}\n        <span id=\"legend-toggle-icon\"></span>\n    </h4>\n    <div class=\"flex-child legend-inner\">\n\t\t\t<div id=\"legend-items\" class=\"overlay-box toggle-content\">\n          ${allLayers\n            .map(layer => {\n              if (layer.hasFilters) {\n                return legendItemWithFilters(layer);\n              }\n              return legendItem(layer);\n            })\n            .join(\"\")}\n\t\t\t</div>\n      <div id=\"legend-footer\" class=\"overlay-box toggle-content\">\n        <div onClick=\"tcat.noFilter()\">${T.LEGEND_VIEW_ALL}</div>\n      </div>\n\t</div>\n</div>`;\n\nconst legendItem = ({ name, color, label }) => `\n  <div\n    class=\"legend-item active\"\n    id=\"${name}\"\n    onClick=\"tcat.handleLayerToggle(${getArg(name)})\"\n  >\n    <span class=\"legend-key\" style=\"background-color: ${color}\"></span>\n    <span class=\"label\">${label}</span>\n  </div>`;\n\nconst legendItemChild = ({ value, layerId, color, label }) => `\n    <div\n      class=\"legend-item active\"\n      id=\"${layerId}-${value}\"\n      onClick=\"tcat.handleFilterToggle(${getArg(layerId)}, ${getArg(value)})\"\n    >\n      <span class=\"legend-key\" style=\"background-color: ${color}\"></span>\n      <span class=\"label\">${label}</span>\n    </div>\n`;\n\nconst legendItemWithFilters = ({ name, color, label, filters }) => `\n  <div class=\"legend-item active\" id=\"${name}\">\n    <span class=\"legend-key\" style=\"background-color: ${color}\"></span>\n    <span class=\"label\" onClick=\"tcat.handleFilterLayerToggle(${getArg(\n      name\n    )})\">${label}</span>\n    <div class=\"legend-items\">\n      ${filters.map(legendItemChild).join(\"\")}\n    </div>\n  </div>\n`;\n","import { LAYERS } from \"./config\";\n\nconst filteringLayers = Object.entries(LAYERS)\n  .filter(\n    ([, { filters, filterOn }]) =>\n      filterOn && filters && filters.length && filters.length > 0\n  )\n  .map(([layerName, { filters = [], filterOn }]) => {\n    return {\n      name: layerName,\n      filterOn,\n      filters\n    };\n  });\n\nexport const filteringLayersList = filteringLayers.map(({ name }) => name);\nconst hasToggle = ({ id }) => id.substring(0, 7) === \"toggle-\";\n\nexport const getVisibleLayers = layerList =>\n  layerList.filter(hasToggle).reduce((agg, layer) => {\n    let result = { [layer.id]: true };\n    let layerIndex = filteringLayersList.indexOf(layer.id);\n    if (layerIndex >= 0) {\n      const layer = filteringLayers[layerIndex];\n      result[layer.name] = layer.filters.reduce(\n        (agg, { value }) => Object.assign({ [value]: true }, agg),\n        {}\n      );\n    }\n    return Object.assign(result, agg);\n  }, {});\n\nexport const getFilteredLayers = layerList =>\n  layerList.filter(hasToggle).map(layer => {\n    const layerC = LAYERS[layer.id];\n    const hasFilters = layerC.filters && !!layerC.filters.length;\n    return {\n      ...layerC,\n      hasFilters,\n      filters:\n        hasFilters &&\n        layerC.filters.map(filter => ({ ...filter, layerId: layer.id })),\n      name: layer.id,\n      label: layerC && layerC.label ? layerC.label : layer.id.substring(7)\n    };\n  });\n","import { LAYERS } from \"./config\";\nimport { getVisibleLayers } from \"./utils\";\n\n/**\n Toggles the entire layer for a layer without a filter\n**/\nexport const getLayerToggleHandler = map => layerId => {\n  // toggle class\n  const legendItem = document.getElementById(layerId);\n  legendItem.classList.toggle(\"active\");\n  // toggle state\n  map.visibleLayers[layerId] = !map.visibleLayers[layerId];\n  const isToggledOn = map.visibleLayers[layerId];\n  const visibility = isToggledOn ? \"visible\" : \"none\";\n  // toggle layer visibility\n  return map.setLayoutProperty(layerId, \"visibility\", visibility);\n};\n\n/**\n Toggles the entire layer for a layer with a filter\n**/\nexport const getFilterLayerToggleHandler = map => layerId => {\n  const legendItem = document.getElementById(layerId);\n  legendItem.classList.toggle(\"active\");\n  const legendItemEls = document.querySelectorAll(`#${layerId} .legend-item`);\n  const currentLayerState = map.visibleLayers[layerId];\n\n  // if any items were active, they are now all inactive\n  const isToggledOn = !Object.values(currentLayerState).some(item => item);\n\n  // Toggle the active class for children\n\n  [].forEach.call(legendItemEls, item => {\n    isToggledOn\n      ? item.classList.add(\"active\")\n      : item.classList.remove(\"active\");\n  });\n\n  const visibility = isToggledOn ? \"visible\" : \"none\";\n\n  // update map.visibleLayers state\n  map.visibleLayers[layerId] = Object.keys(currentLayerState).reduce(\n    (agg, value) => ({ ...agg, [value]: isToggledOn }),\n    {}\n  );\n\n  // If we are toggling the layer back on, display everything\n  isToggledOn && map.setFilter(layerId, null);\n\n  // Toggle Layer visibility\n  return map.setLayoutProperty(layerId, \"visibility\", visibility);\n};\n\n/**\n * Toggles just the filter item.\n */\nexport const getFilterToggleHandler = map => (layerId, value) => {\n  // Toggle Active Class\n  const legendItem = document.getElementById(`${layerId}-${value}`);\n  legendItem.classList.toggle(\"active\");\n\n  if (layerId) {\n    const layerConfig = LAYERS[layerId];\n    const layerData = map.visibleLayers[layerId];\n    map.visibleLayers[layerId][value] = !layerData[value];\n    // If this filter is active, it's parent should be active too\n    if (map.visibleLayers[layerId][value]) {\n      document.getElementById(layerId).classList.add(\"active\");\n    }\n    if (!Object.values(map.visibleLayers[layerId]).some(item => item)) {\n      document.getElementById(layerId).classList.remove(\"active\");\n    }\n\n    const activeFilterLayers = Object.keys(layerData).filter(\n      key => layerData[key]\n    );\n    if (activeFilterLayers.length > 0) {\n      map.setLayoutProperty(layerId, \"visibility\", \"visible\");\n      // build the filter query, using filterOn for the field to filter on,\n      // and spreading the activeFilterLayers\n      return map.setFilter(layerId, [\n        activeFilterLayers.length === 1 ? \"==\" : \"in\",\n        layerConfig.filterOn,\n        ...activeFilterLayers\n      ]);\n    }\n\n    // TODO: Until we figure out how to setFilter of none?\n    return map.setLayoutProperty(layerId, \"visibility\", \"none\");\n  }\n};\n\n/**\n * To reset the entire layer/filter state\n */\nexport const getNoFilterHandler = (\n  map,\n  { filteredLayers, layerList }\n) => () => {\n  filteredLayers.map(layer =>\n    map.setLayoutProperty(layer.name, \"visibility\", \"visible\")\n  );\n  filteredLayers.map(({ name }) => map.setFilter(name, null));\n  map.visibleLayers = getVisibleLayers(layerList);\n  const legendItemEls = document.querySelectorAll(`.legend-item`);\n  [].forEach.call(legendItemEls, item => {\n    item.classList.add(\"active\");\n  });\n};\n","import { TEXT as T } from \"../config\";\n\nexport default feature =>\n  `<div class=\"popup-header\">\n    <h3>\n        <a\n          href=\"${feature.properties.link}\"\n          >\n          ${feature.properties.Estaci√≥n}\n        </a>\n    </h3>\n    <div class=\"popup-image\">\n        <a\n          href=\"${feature.properties.link}\"\n          >\n          <img\n            src=\"${feature.properties.Image}\"\n            alt=\"${T.POPUP_IMAGE_ALT_PREFIX} ${feature.properties.Estaci√≥n}\"\n          />\n        </a>\n\n    </div>\n  </div>\n  <div class=\"popup-content\">\n    <div class=\"popup-description\">\n      <p>${feature.properties.description}</p>\n    </div>\n    <a\n      class=\"popup-button\"\n      href=\"${feature.properties.link}\"\n      >\n      ${T.POPUP_MORE_INFO}\n    </a>\n  </div>\n  `;\n","/* global mapboxgl */\n/* eslint-disable no-irregular-whitespace */\n/* eslint-disable no-undef */\n\nimport popupComponent from \"./components/popup\";\nimport { MAP, ANIMATION_DURATION, ACCESS_TOKEN, LAYERS } from \"./config\";\n\nmapboxgl.accessToken = ACCESS_TOKEN;\n\nconst DEFAULT_MAP = {\n  container: \"map\"\n};\n\nexport function createCompass() {\n  const leftEl = document.querySelector(\".mapboxgl-ctrl-bottom-left\");\n  const compass = document.createElement(\"div\");\n\n  compass.innerHTML = `<div class=\"mapboxgl-ctrl mapboxgl-ctrl-group\">\n      <button class=\"mapboxgl-ctrl-icon mapboxgl-ctrl-compass\" type=\"button\" aria-label=\"Reset North\">‚Ä®\n      <span class=\"mapboxgl-ctrl-compass-arrow\" style=\"transform: rotate(0deg);\"></span>‚Ä®\n    </button>‚Ä®\n  </div>`;\n\n  compass.onclick = () => {\n    map.flyTo({\n      center: DEFAULT_MAP.center\n    });\n  };\n  leftEl.appendChild(compass);\n}\n\nexport default function getMap() {\n  const map = new mapboxgl.Map(\n    // Set defaults, allow the config to override\n    Object.assign(DEFAULT_MAP, MAP)\n  );\n\n  const popup = new mapboxgl.Popup();\n\n  // Create a mapboxgl.Popup from the default popup component.\n  const showPopup = feature => {\n    popup\n      .setLngLat(feature.geometry.coordinates)\n      .setHTML(popupComponent(feature))\n      .addTo(map);\n    popup.on(\"close\", () => {\n      map.flyTo({\n        center: DEFAULT_MAP.center,\n        duration: ANIMATION_DURATION\n      });\n    });\n\n    return popup;\n  };\n\n  // HANDLE MAP EVENTS\n\n  Object.entries(LAYERS)\n    .filter(([, layerConfig]) => layerConfig.hasPopups)\n    .map(([layerId]) => {\n      map.on(\"click\", layerId, e => {\n        const feature = e.features[0];\n        setTimeout(() => {\n          map.flyTo({\n            center: feature.geometry.coordinates,\n            duration: ANIMATION_DURATION\n          });\n          showPopup(feature);\n        }, 200);\n      });\n    });\n\n  //FULL SCREEN MODE\n\n  map.addControl(new mapboxgl.FullscreenControl());\n  // Add zoom conntrol\n  const nav = new mapboxgl.NavigationControl({ showCompass: false });\n  map.addControl(nav, \"top-left\");\n  // disable scrollZoom\n  map.scrollZoom.disable();\n  createCompass();\n  return map;\n}\n","/* eslint-disable no-irregular-whitespace */\n\nimport legendComponent from \"./components/legend\";\nimport { getVisibleLayers, getFilteredLayers } from \"./utils\";\nimport {\n  getLayerToggleHandler,\n  getFilterToggleHandler,\n  getNoFilterHandler,\n  getFilterLayerToggleHandler\n} from \"./handlers\";\nimport getMap from \"./map\";\nimport \"../assets/styles/index.scss\";\n\n// instantiate the map instance\nconst map = getMap();\n// debugging only\n// window.map = map;\nwindow.tcat = window.tcat || {};\n\nwindow.tcat.toggleLegend = () => {\n  const legendEl = document.getElementById(\"legend\");\n  legendEl.classList.toggle(\"active\");\n};\n\n// HANDLE POPUPS\n\nmap.visibleLayers = {};\n\nmap.on(\"load\", () => {\n  const layerList = map.getStyle().layers;\n\n  map.visibleLayers = getVisibleLayers(layerList);\n  let filteredLayers = getFilteredLayers(layerList);\n\n  const legendEl = document.getElementById(`legend`);\n\n  // This is where we combine the symbol layer SOURCE_TYPES with filteredLayers\n  legendEl.innerHTML = legendComponent([...filteredLayers]);\n\n  // HANDLE MAP LOAD\n  window.tcat.handleLayerToggle = getLayerToggleHandler(map);\n  window.tcat.handleFilterToggle = getFilterToggleHandler(map);\n  window.tcat.handleFilterLayerToggle = getFilterLayerToggleHandler(map);\n  window.tcat.noFilter = getNoFilterHandler(map, { layerList, filteredLayers });\n});\n\n// Press Command to Scrollzoom\ndocument.body.addEventListener(\"keydown\", function(event) {\n  const { metaKey, ctrlKey } = event;\n  if (metaKey || ctrlKey) {\n    map.scrollZoom.enable();\n  }\n});\ndocument.body.addEventListener(\"keyup\", function(event) {\n  const { metaKey, ctrlKey } = event;\n  if (metaKey || ctrlKey) {\n    map.scrollZoom.disable();\n  }\n});\n"]}